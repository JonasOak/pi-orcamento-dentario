package model.view;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.List;
import java.util.Locale;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.controller.ItemDoOrcamentoController;
import model.controller.OrcamentoController;
import model.dao.DaoFactory;
import model.entities.Cliente;
import model.entities.ItemDoOrcamento;
import model.entities.Orcamento;
import model.entities.enums.Operacao;
import static model.entities.enums.Operacao.ALTERAR;
import static model.entities.enums.Operacao.EXCLUIR;
import static model.entities.enums.Operacao.INSERIR;

public class ManterItemDoOrcamento extends javax.swing.JInternalFrame {

    DecimalFormat df = new DecimalFormat("R$#,##0.00", new DecimalFormatSymbols(new Locale("pt", "BR")));
    private Operacao operacao;
    
    String[] nomesDentes = {
        "Incisivo Central Superior Direito - 11", 
        "Incisivo Lateral Superior Direito - 12",
        "Canino Superior Direito - 13",
        "Primeiro Pré-Molar Superior Direito - 14",
        "Segundo Pré-Molar Superior Direito - 15",
        "Primeiro Molar Superior Direito - 16",
        "Segundo Molar Superior Direito - 17",
        "Terceiro Molar Superior Direito - 18",
        "Incisivo Central Superior Esquerdo - 21", 
        "Incisivo Lateral Superior Esquerdo - 22",
        "Canino Superior Esquerdo - 23",
        "Primeiro Pré-Molar Superior Esquerdo - 24",
        "Segundo Pré-Molar Superior Esquerdo - 25",
        "Primeiro Molar Superior Esquerdo - 26",
        "Segundo Molar Superior Esquerdo - 27",
        "Terceiro Molar Superior Esquerdo - 28",
        "Incisivo Central Inferior Direito - 31", 
        "Incisivo Lateral Inferior Direito - 32",
        "Canino Inferior Direito - 33",
        "Primeiro Pré-Molar Inferior Direito - 34",
        "Segundo Pré-Molar Inferior Direito - 35",
        "Primeiro Molar Inferior Direito - 36",
        "Segundo Molar Inferior Direito - 37",
        "Terceiro Molar Inferior Direito - 38",
        "Incisivo Central Inferior Esquerdo - 41", 
        "Incisivo Lateral Inferior Esquerdo - 42",
        "Canino Inferior Esquerdo - 43",
        "Primeiro Pré-Molar Inferior Esquerdo - 44",
        "Segundo Pré-Molar Inferior Esquerdo - 45",
        "Primeiro Molar Inferior Esquerdo - 46",
        "Segundo Molar Inferior Esquerdo - 47",
        "Terceiro Molar Inferior Esquerdo - 48"
    };
    
    /**
     * Creates new form ManterItemDoOrcamento
     */
    public ManterItemDoOrcamento() {
        initComponents();
        povoarCliente();
        povoarOrcamento();
        povoarDente();
    }
    
    public JButton getBtExcluir() {
        return btExcluir;
    }

    public JButton getBtAlterar() {
        return btAlterar;
    }
    
    public JButton getBtConfirmar() {
        return btConfirmar;
    }

    public JTextField getTfOperacao() {
        return tfOperacao;
    }
    
    private void povoarCliente() {
        try {
            OrcamentoController dao = DaoFactory.criarOrcamentoController();
            List<Cliente> lista = dao.buscarTodosClientes();
            for(Cliente c : lista){
                listaCliente.addItem(c);
            }            
            listaCliente.addActionListener(this::listaClienteActionPerformed);        
        } catch (Exception ex) {
            ex.getMessage();
        }    
    }
    
    private void povoarOrcamento() {
        try {
            OrcamentoController dao = DaoFactory.criarOrcamentoController();
            Cliente cliente = (Cliente) listaCliente.getSelectedItem();
            
            if (cliente != null) {
                List<Orcamento> lista = dao.buscarPorCliente(cliente);
                listaOrcamento.removeAllItems();
                for (Orcamento o : lista) {
                    listaOrcamento.addItem(o);
                }
            }
            
        } catch (Exception ex) {
            ex.getMessage();
        }
    }
    
    private void povoarDente() {
        for (String nome : nomesDentes) {
            listaDente.addItem(nome);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfPesquisar = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfOperacao = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfServico = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        listaCliente = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        listaOrcamento = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        listaDente = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btListar = new javax.swing.JButton();
        btInserir = new javax.swing.JButton();
        btConfirmar = new javax.swing.JButton();
        tfValor = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Manter Item do Orcamento");

        jLabel1.setText("Digite o código:");

        tfPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPesquisarActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aoClicarBuscar(evt);
            }
        });

        jLabel2.setText("Operação atual:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(120, 120, 120)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(tfOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2)
                    .addComponent(tfOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Codigo:*");

        tfCodigo.setEditable(false);
        tfCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setText("Serviço:*");

        jLabel5.setText("Cliente:*");

        listaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaClienteActionPerformed(evt);
            }
        });

        jLabel6.setText("N° Orçamento:*");

        listaOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaOrcamentoActionPerformed(evt);
            }
        });

        jLabel7.setText("Dente:*");

        jLabel8.setText("Valor:*");

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aoClicarAlterar(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aoClicarExcluir(evt);
            }
        });

        btListar.setText("Listar");
        btListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarLista(evt);
            }
        });

        btInserir.setText("Inserir");
        btInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aoClicarInserir(evt);
            }
        });

        btConfirmar.setText("Confirmar");
        btConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aoClicarConfirmar(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(listaCliente, 0, 214, Short.MAX_VALUE)
                                    .addComponent(listaDente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(tfServico, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(listaOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(tfValor))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btListar, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tfServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(listaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(listaOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(listaDente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btListar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPesquisarActionPerformed

    private void aoClicarAlterar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aoClicarAlterar
        btConfirmar.setEnabled(true);
        this.operacao = Operacao.ALTERAR;
        tfOperacao.setText(this.operacao.name());
    }//GEN-LAST:event_aoClicarAlterar

    private void aoClicarExcluir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aoClicarExcluir
        int resp = JOptionPane.showConfirmDialog(null,"Deseja Excluir o Registro?","Exclusão de Registro",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);

        if (resp == 0) {
            this.operacao = Operacao.EXCLUIR;
            tfOperacao.setText(this.operacao.name());
            this.aoClicarConfirmar(evt);
            btAlterar.setEnabled(false);
            btExcluir.setEnabled(false);
        }
        else {
            tfPesquisar.requestFocus();
        }
    }//GEN-LAST:event_aoClicarExcluir

    private void mostrarLista(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarLista
        ListaItemDoOrcamento form = new ListaItemDoOrcamento();
        Operacao operacao = Operacao.INATIVO;
        getDesktopPane().add(form);
        form.setVisible(true);
    }//GEN-LAST:event_mostrarLista

    private void aoClicarInserir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aoClicarInserir
        tfCodigo.setText("");
        tfValor.setText("");
        tfServico.setText("");
        btExcluir.setEnabled(false);
        btAlterar.setEnabled(false);
        btConfirmar.setEnabled(true);
        this.operacao = Operacao.INSERIR;
        tfOperacao.setText(this.operacao.name());
    }//GEN-LAST:event_aoClicarInserir
    
    private void aoClicarConfirmar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aoClicarConfirmar
        switch (operacao) {
            case INSERIR:
            try {
                ItemDoOrcamentoController itemDoOrcamentoController = DaoFactory.criarItemDoOrcamentoController();
                ItemDoOrcamento itemDoOrcamento = new ItemDoOrcamento();

                itemDoOrcamento.setServico(tfServico.getText());
                itemDoOrcamento.setOrcamento((Orcamento)listaOrcamento.getSelectedItem());
                itemDoOrcamento.getOrcamento().setCliente((Cliente)listaCliente.getSelectedItem());
                itemDoOrcamento.setDente((String) listaDente.getSelectedItem());
                
                String valorTexto = tfValor.getText();
                BigDecimal valor = null;
                if (valorTexto == null || valorTexto.trim().isEmpty())
                    throw new NumberFormatException("Valor está vazio ou nulo");
                valorTexto = valorTexto.trim().replace(",", ".");
                valor = new BigDecimal(valorTexto);
                itemDoOrcamento.setValor(valor);

                itemDoOrcamentoController.inserir(itemDoOrcamento);
                JOptionPane.showMessageDialog(null, "Operação Concluída com Sucesso", "Inserção", JOptionPane.INFORMATION_MESSAGE);
                this.operacao = Operacao.INATIVO;
                tfOperacao.setText(this.operacao.name());
                btConfirmar.setEnabled(false);
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage(),"Inserção",JOptionPane.ERROR_MESSAGE);
                //e.printStackTrace();
            }
            break;

            case ALTERAR:
            try {
                ItemDoOrcamentoController itemDoOrcamentoController = DaoFactory.criarItemDoOrcamentoController();
                ItemDoOrcamento itemDoOrcamento = new ItemDoOrcamento();
                String valorTexto = tfValor.getText();
                BigDecimal valor = new BigDecimal(valorTexto);

                itemDoOrcamento.setIdItemDoOrcamento(Integer.parseInt(tfCodigo.getText()));
                itemDoOrcamento.setServico(tfServico.getText());
                itemDoOrcamento.setOrcamento((Orcamento)listaOrcamento.getSelectedItem());
                itemDoOrcamento.getOrcamento().setCliente((Cliente)listaCliente.getSelectedItem());
                itemDoOrcamento.setDente((String)listaDente.getSelectedItem());
                itemDoOrcamento.setValor(valor);

                itemDoOrcamentoController.atualizar(itemDoOrcamento);
                JOptionPane.showMessageDialog(null,"Operação Concluída com Sucesso","Alteração",JOptionPane.INFORMATION_MESSAGE);
                this.operacao = Operacao.INATIVO;
                tfOperacao.setText(this.operacao.name());
                btConfirmar.setEnabled(false);

            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Houve um erro na alteração","Alteração",JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
            break;

            case EXCLUIR:
            try {
                ItemDoOrcamentoController itemDoOrcamentoController = DaoFactory.criarItemDoOrcamentoController();
                ItemDoOrcamento itemDoOrcamento = new ItemDoOrcamento();
                String valorTexto = tfValor.getText();
                BigDecimal valor = new BigDecimal(valorTexto);

                itemDoOrcamento.setIdItemDoOrcamento(Integer.parseInt(tfCodigo.getText()));
                itemDoOrcamento.setServico(tfServico.getText());
                itemDoOrcamento.setOrcamento((Orcamento)listaOrcamento.getSelectedItem());
                itemDoOrcamento.getOrcamento().setCliente((Cliente)listaCliente.getSelectedItem());
                itemDoOrcamento.setDente((String)listaDente.getSelectedItem());
                itemDoOrcamento.setValor(valor);

                itemDoOrcamentoController.deletarPorId(itemDoOrcamento.getIdItemDoOrcamento());
                JOptionPane.showMessageDialog(null,"Operação Concluída com Sucesso","Exclusão",JOptionPane.INFORMATION_MESSAGE);
                this.operacao = Operacao.INATIVO;
                tfOperacao.setText(this.operacao.name());
                btConfirmar.setEnabled(false);

                tfCodigo.setText("");
                tfServico.setText("");
                tfValor.setText("");
                tfPesquisar.setText("");
                tfPesquisar.requestFocus();
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage(),"Exclusão",JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
            break;
        }
    }//GEN-LAST:event_aoClicarConfirmar

    private void aoClicarBuscar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aoClicarBuscar
        try {
            
            ItemDoOrcamentoController itemDoOrcamentoController = DaoFactory.criarItemDoOrcamentoController();
            ItemDoOrcamento itemDoOrcamento = new ItemDoOrcamento();

            itemDoOrcamento = itemDoOrcamentoController.buscarPorId(Integer.parseInt(tfPesquisar.getText()));
            tfCodigo.setText(String.valueOf(itemDoOrcamento.getIdItemDoOrcamento()));
            tfValor.setText(itemDoOrcamento.getValor().toString());
            tfServico.setText(itemDoOrcamento.getServico());
            
            Cliente c = itemDoOrcamento.getOrcamento().getCliente();
            listaCliente.setSelectedItem(c);
            
            Orcamento o = itemDoOrcamento.getOrcamento();
            listaOrcamento.setSelectedItem(o);
            
            listaDente.setSelectedItem(itemDoOrcamento.getDente());
            
            tfPesquisar.requestFocus();
            btExcluir.setEnabled(true);
            btAlterar.setEnabled(true);
            btConfirmar.setEnabled(false);
            this.operacao = Operacao.BUSCAR;
            tfOperacao.setText(this.operacao.name());
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Erro ao Pesquisar","Erro",JOptionPane.ERROR_MESSAGE);
            tfPesquisar.requestFocus();
        }
    }//GEN-LAST:event_aoClicarBuscar

    private void listaOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaOrcamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaOrcamentoActionPerformed

    private void listaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaClienteActionPerformed
        povoarOrcamento();
    }//GEN-LAST:event_listaClienteActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btConfirmar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btInserir;
    private javax.swing.JButton btListar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<Cliente> listaCliente;
    private javax.swing.JComboBox listaDente;
    private javax.swing.JComboBox<Orcamento> listaOrcamento;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfOperacao;
    private javax.swing.JTextField tfPesquisar;
    private javax.swing.JTextField tfServico;
    private javax.swing.JTextField tfValor;
    // End of variables declaration//GEN-END:variables
}
